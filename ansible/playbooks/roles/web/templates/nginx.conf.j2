upstream app_server_djangoapp {
  server localhost:8000 fail_timeout=0;
}

server {
  listen 443 ssl spdy;

  {% if 'tag_role_paygov' in group_names %}

  server_name pay.donate.peacecorps.internal;

  ssl_certificate      /etc/nginx/ssl/keys/pay.donate.peacecorps.internal.crt;
  ssl_certificate_key  /etc/nginx/ssl/keys/pay.donate.peacecorps.internal.key;

  {% else %}

  server_name {{root_domain_name}};
  ssl_certificate      /etc/nginx/ssl/keys/donate.crt;
  ssl_certificate_key  /etc/nginx/ssl/keys/donate.key;
  {% endif %}
  include ssl/ssl.rules;

  access_log /var/log/nginx/{{root_domain_name}}.access.log;
  error_log /var/log/nginx/{{root_domain_name}}.error.log info;

  keepalive_timeout 5;

  # nginx should serve up static files and never send to the WSGI server
  location /static {
    alias /var/www/static;
  }

  location / {

    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header Host $http_host;
    proxy_redirect off;

    {% if 'tag_role_paygov' in group_names %}
    # We don't pass auth here
    {% else %}
    auth_basic "Restricted";
    auth_basic_user_file /etc/nginx/.htpasswd;
    {% endif %}

    if (!-f $request_filename) {
      proxy_pass http://app_server_djangoapp;
      break;
    }
  }
}

server {
    listen 80;
    {% if 'tag_role_paygov' in group_names %}
      server_name pay.donate.peacecorps.internal;
    {% else %}
      server_name {{root_domain_name}};
    {% endif %}
    return 301 https://$host$request_uri;
}
